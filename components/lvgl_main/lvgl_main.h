#pragma once

#include <stdbool.h>
#include <stdint.h>
#include "system_config.h"

/**
 * @brief Инициализация пользовательского интерфейса LVGL
 * 
 * Эта функция инициализирует основной пользовательский интерфейс для отображения
 * данных сенсоров на дисплее. Она создает все необходимые элементы интерфейса
 * и запускает задачу обновления отображения.
 */
void lvgl_main_init(void);

/**
 * @brief Обновление значений датчиков на дисплее
 * 
 * Эта функция отправляет новые значения датчиков в очередь для обновления
 * отображения на экране. Значения будут отображены в соответствующих полях
 * пользовательского интерфейса.
 * 
 * @param ph Значение pH (например, 6.5)
 * @param ec Значение EC (например, 1.2)
 * @param temp Значение температуры в градусах Цельсия (например, 24.5)
 * @param hum Значение влажности в процентах (например, 65.0)
 * @param lux Значение освещенности в люксах (например, 1200.0)
 * @param co2 Значение CO2 в ppm (например, 450.0)
 */
void lvgl_update_sensor_values(float ph, float ec, float temp, float hum, float lux, float co2);

// Глобальная переменная для отслеживания вращения энкодера
extern int32_t last_encoder_diff;

// Структура данных датчиков определена в system_config.h

/**
 * @brief Обновление значений датчиков на дисплее из структуры данных
 * 
 * Эта функция обновляет отображение значений датчиков на экране, используя
 * структуру с данными датчиков.
 * 
 * @param data Указатель на структуру с данными датчиков
 */
void lvgl_update_sensor_values_from_queue(sensor_data_t *data);

/**
 * @brief Получение дескриптора очереди данных датчиков
 * 
 * Эта функция возвращает дескриптор очереди, в которую помещаются данные датчиков
 * для обновления отображения на экране.
 * 
 * @return Дескриптор очереди данных датчиков
 */
void* lvgl_get_sensor_data_queue(void);

/**
 * @brief Установка фокуса на определенный элемент интерфейса
 * 
 * Эта функция устанавливает фокус на указанный элемент интерфейса для
 * навигации с помощью энкодера.
 * 
 * @param index Индекс элемента (0-5 для pH, EC, Temp, Hum, Lux, CO2)
 */
void lvgl_set_focus(int index);

/**
 * @brief Получение текущего индекса фокуса
 * 
 * Эта функция возвращает текущий индекс элемента с фокусом.
 * 
 * @return Текущий индекс фокуса (0-5)
 */
int lvgl_get_focus_index(void);

/**
 * @brief Получение общего количества элементов для фокуса
 * 
 * Эта функция возвращает общее количество элементов, между которыми
 * можно перемещаться с помощью фокуса.
 * 
 * @return Общее количество элементов для фокуса
 */
int lvgl_get_total_focus_items(void);

/**
 * @brief Очистка группы фокуса
 * 
 * Эта функция очищает группу фокуса, удаляя все объекты из нее.
 * Используется при переключении между экранами/панелями.
 */
void lvgl_clear_focus_group(void);

/**
 * @brief Открыть экран деталей для текущей панели по индексу
 * 
 * Создает и отображает экран деталей, соответствующий панели с заданным индексом.
 * При повторном вызове с открытым экраном деталей сначала закроет текущий.
 * 
 * @param index Индекс панели (0-5)
 */
void lvgl_open_detail_screen(int index);

/**
 * @brief Закрыть экран деталей (вернуться на главный экран)
 */
void lvgl_close_detail_screen(void);

/**
 * @brief Статус: открыт ли экран деталей
 * 
 * @return true если открыт экран деталей, иначе false
 */
bool lvgl_is_detail_screen_open(void);